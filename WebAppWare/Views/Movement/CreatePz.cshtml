@model ProductFlowMovementModel

@{
	var items = Model.ProductFlowModels.ToArray();
}

<h4 class="pb-2">Dodawanie PZ</h4>

<form id="form" class="row" data-url="@Url.Action("CreatePz")">

	<div class="col-2">
		<label class="ms-2 pb-2" asp-for="@Model.Document">Nr dokumentu:</label>
		<input id="Document" class="form-control border-0 shadow mb-4" value="@Model.Document" asp-for="@Model.Document" />
		<span class="text-danger" asp-validation-for="@Model.Document"></span>
	</div>

	<div class="col-2">
		<label class="ms-2 pb-2" asp-for="@Model.Warehouses">Magazyn:</label>
		<select id="WarehouseId" class="form-select border-0 shadow mb-4" asp-items="@Model.Warehouses" asp-for="@Model.WarehouseId">
			<option disabled selected>-- Wybierz magazyn --</option>
		</select>
	</div>

	<div class="col-2">
		<input id="submitButton" type="button" class="btn btn-success" value="Zatwierdź" />
	</div>

	<table id="table" class="table table-bordered table-striped" style="width: 100%">
		<thead>
		<th>
			Index
		</th>
		<th>
			Dostawca
		</th>
		<th>
			Ilość
		</th>
		<th>
			<input id="addRowButton" type="button" class="btn btn-success" value="Dodaj kolejny"/>
		</th>
		</thead>

		<tbody id="parentTable">
			<tr name="item">
				<td>
					@Html.DropDownList("items", Model.Products, new { @class = "form-select border-0 shadow mb-2", @data_toggle = "item-property" })
				</td>
				<td>
					@Html.DropDownList("suppliers", Model.Suppliers, new { @class = "form-select border-0 shadow mb-2", @data_toggle = "item-property" })
				</td>
				<td>
					<input data-toggle="item-property" name="items-property" class="form-control border-0 shadow mb-2" type="text" />
				</td>
				<td>
				</td>
			</tr>
		</tbody>
	</table>

	<a class="btn btn-secondary" asp-controller="Movement" asp-action="Index">Wróć do listy</a>

</form>

@section Scripts
{
	<script>
		// () => {} to jest arrow function / anonimowa funckja / lambda expression
		$(() => {
			const addRecord = () => {
				const row = `
							<tr name="item">
								<td>
		@Html.DropDownList("items", Model.Products, new { @class = "form-select border-0 shadow mb-2", @data_toggle = "item-property" })
								</td>
								<td>
		@Html.DropDownList("suppliers", Model.Suppliers, new { @class = "form-select border-0 shadow mb-2", @data_toggle = "item-property" })
								</td>
								<td>
									<input data-toggle="item-property" name="items-property" class="form-control border-0 shadow mb-2" type="text" />
								</td>
								<td>
								</td>
							</tr>
						`;

				console.log('row', row);

				$('#table tr:last').after(row);
			}

			$('#submitButton').click((e) => {
				e.preventDefault();

				onSubmit();
			});

			$('#addRowButton').click(() => {
				addRecord();
			});

			const onSubmit = () => {
				const form = {
					document: '',
					warehouseId: 0,
					productFlowModels: []
				};

				console.log('document', $('#Document').val());
				form.document = $('#Document').val();

				console.log('WarehouseId', $('#WarehouseId').val());
				form.warehouseId = $('#WarehouseId').val();

				const items = $('tr[name="item"]');
				// console.log(items);

				const elements = [];

				$.each(items, function () {
					// elementy listy
					console.log(this);

					const properties = $(this).find('[name="items-property"]');
					console.log('properties:');

					const item = {};

					// wiem, ze pierwszy element to product, 2 to supplier i 3 to quantity
					let i = 0;
					$.each(properties, function () {
						if (i === 0) {
							item.productId = $(this).val();
						}
						if (i === 1) {
							item.supplierId = $(this).val();
						}
						if (i === 2) {
							item.quantity = $(this).val();
						}

						i++;
					});

					elements.push(item);
				})

				console.log('FINAL:');
				console.log(elements);

				form.productFlowModels = elements;

				console.log('FORM:');
				console.log(form);

				const data = $('#form');
				console.log(data.data('url'));

				$.ajax({
					url: data.data('url'),
					method: 'POST',
					data: form,
					success: function () {
						console.log('wyslano zapytanie');
					},
					error: function (error) {
						console.log(error.error);
					}
				});
			}

			function removeRecord(tr) {

				document.getElementById("parentTable").removeChild(tr.parentNode.parentNode);
			}
		});
	</script>
}

